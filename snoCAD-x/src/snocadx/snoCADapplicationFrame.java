/*
 * Copyright 2007-2014 Daniel Graf (https://github.com/danielgraf)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * applicationFrame.java
 *
 * Created on 22 March 2007, 11:38
 */

package snocadx;


/**
 *
 * @author  dgraf
 */
public class snoCADapplicationFrame extends javax.swing.JFrame {
    
    /** Creates new form applicationFrame */
    public snoCADapplicationFrame() 
    {
        initComponents();
        setJMenuBar(jMainMenu);
        javax.swing.JDesktopPane desktop = new javax.swing.JDesktopPane();
        desktop.setOpaque(false);
        desktop.setBackground(java.awt.Color.DARK_GRAY);
        desktop.setDragMode(javax.swing.JDesktopPane.OUTLINE_DRAG_MODE);
        FileDropHandler fdh = new FileDropHandler();
        desktop.setTransferHandler(fdh);
        setContentPane(desktop);
        

    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jMainMenu = new javax.swing.JMenuBar();
        jFileMenu = new javax.swing.JMenu();
        jNewBoardMenuItem = new javax.swing.JMenuItem();
        jNewSkiMenuItem = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JSeparator();
        jOpenBoardMenuItem = new javax.swing.JMenuItem();
        jImportBoardItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        jExitProgramMenuItem = new javax.swing.JMenuItem();
        optionsMenu = new javax.swing.JMenu();
        preferences = new javax.swing.JMenuItem();
        HelpMenu = new javax.swing.JMenu();
        AboutSnoCAD = new javax.swing.JMenuItem();

        jFileMenu.setBorder(null);
        jFileMenu.setText("File");
        jFileMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileMenuActionPerformed(evt);
            }
        });

        jNewBoardMenuItem.setText("New Snowboard");
        jNewBoardMenuItem.setActionCommand("New Board...");
        jNewBoardMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newBoard(evt);
            }
        });

        jFileMenu.add(jNewBoardMenuItem);

        jNewSkiMenuItem.setText("New Ski");
        jNewSkiMenuItem.setActionCommand("New Ski...");
        jNewSkiMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newSki(evt);
            }
        });

        jFileMenu.add(jNewSkiMenuItem);

        jFileMenu.add(jSeparator2);

        jOpenBoardMenuItem.setText("Open...");
        jOpenBoardMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openNewBoard(evt);
            }
        });

        jFileMenu.add(jOpenBoardMenuItem);

        jImportBoardItem.setText("Import...");
        jImportBoardItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importBoard(evt);
            }
        });

        jFileMenu.add(jImportBoardItem);

        jFileMenu.add(jSeparator1);

        jExitProgramMenuItem.setText("Exit");
        jExitProgramMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleExitProgram(evt);
            }
        });

        jFileMenu.add(jExitProgramMenuItem);

        jMainMenu.add(jFileMenu);

        optionsMenu.setText("Options");
        preferences.setText("Preferences");
        preferences.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onOpenPreferences(evt);
            }
        });

        optionsMenu.add(preferences);

        jMainMenu.add(optionsMenu);

        HelpMenu.setText("Help");
        AboutSnoCAD.setText("About SnoCAD...");
        AboutSnoCAD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OnOpenAbout(evt);
            }
        });

        HelpMenu.add(AboutSnoCAD);

        jMainMenu.add(HelpMenu);

        getContentPane().setLayout(new java.awt.BorderLayout(9, 9));

        setBackground(java.awt.Color.darkGray);
        setMinimumSize(new java.awt.Dimension(800, 600));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void onOpenPreferences(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onOpenPreferences
       
        snoCADpreferences pref = new snoCADpreferences();
        pref.setVisible(true);
        
        javax.swing.JOptionPane pane = new javax.swing.JOptionPane("");
        pane.setMessage(pref);
        pane.setOptionType(javax.swing.JOptionPane.OK_CANCEL_OPTION);
        pane.setMessageType(javax.swing.JOptionPane.PLAIN_MESSAGE);
        
        String fileName = (System.getProperty("user.dir") + "/snoCAD-x.ini");
        
       // javax.swing.JDialog prefDialog = pane.createDialog(this, "Preferences");
        
        int action = pane.showOptionDialog(this, pref, "Preferences", javax.swing.JOptionPane.OK_CANCEL_OPTION, javax.swing.JOptionPane.PLAIN_MESSAGE, null, null, 0);
        
        if (action == pane.CANCEL_OPTION)
        {
            // do nothing
        }
        else
        {
            // Save preferences
            String preferences = "";
            preferences = snoCADutilities.addTaggedData(preferences, "projectFolder", pref.getProjectFolder());
            preferences = snoCADutilities.addTaggedData(preferences, "brandLogo", pref.getBrandLogo());
            preferences = snoCADutilities.addTaggedData(preferences, "defaultProduct", pref.getDefaultProduct());
            
            try
            {
                
                java.io.File iniFile = new java.io.File(fileName) ;
                java.io.PrintWriter out = new java.io.PrintWriter(new java.io.BufferedWriter(new java.io.FileWriter(fileName)));
                out.print(preferences);
                out.close();
                Main.globalPreferences = preferences;
            }
            catch (java.io.IOException exc)
            {
                Main.alert("Could not save ini file at " + fileName);
            }
        }
                   
        
    }//GEN-LAST:event_onOpenPreferences

    private void OnOpenAbout(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OnOpenAbout

        snoCADaboutDialog about = new snoCADaboutDialog();
        about.setVisible(true);
        javax.swing.JOptionPane pane = new javax.swing.JOptionPane("",javax.swing.JOptionPane.PLAIN_MESSAGE);
        pane.setMessage(about);
        javax.swing.JDialog aboutDialog = pane.createDialog(this, "About snoCAD-X");
        aboutDialog.setAlwaysOnTop(true);
        aboutDialog.setModalityType(java.awt.Dialog.ModalityType.DOCUMENT_MODAL);
        aboutDialog.setSize(430,370);
        aboutDialog.setVisible(true);
        
    }//GEN-LAST:event_OnOpenAbout

    private void newSki(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newSki
        
        snoCADeditor boardEditor = new snoCADeditor("Untitled ski", 10, 10, 640, 480, 1);
        
        add(boardEditor);
        
        try 
        {
            boardEditor.setSelected(true);
            boardEditor.loadBoard(null);
        } 
        catch (java.beans.PropertyVetoException e) {}
        
    }//GEN-LAST:event_newSki

    private void importBoard(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importBoard

        final javax.swing.JFileChooser fc = new javax.swing.JFileChooser(Main.getProjectFolder());
        fc.setFileFilter(new snoCADfileFilters().getImportFilter());
        fc.setDialogTitle("Import snoCAD2 or Boardcrafter Design file");
        int returnVal = fc.showOpenDialog(snoCADapplicationFrame.this);
        
        if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) 
        {
            java.io.File importFile = fc.getSelectedFile();
            
            if (importFile != null)
            {

                try 
                {
                    String extension = "";
                    if (importFile.getName().toLowerCase().endsWith(".sno"))
                    {                  
                       extension = "sno"; 
                    }
                    if (importFile.getName().toLowerCase().endsWith(".bcr"))
                    {
                       extension = "bcr"; 
                    }
                    
                    snoCADeditor boardEditor = new snoCADeditor(importFile.getName(), 10, 10, 640, 480, 0);
                    add(boardEditor);
                    boardEditor.setSelected(true);
                    boardEditor.importBoard(importFile, extension);
                } 
                catch (java.beans.PropertyVetoException e) {}
            }
        } 
        else 
        {
            // File was not opened
        }
    }//GEN-LAST:event_importBoard

    private void jFileMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileMenuActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jFileMenuActionPerformed

    private void newBoard(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newBoard

        snoCADeditor boardEditor = new snoCADeditor("Untitled snowboard", 10, 10, 640, 480, 0);
        
        add(boardEditor);
        
        try 
        {
            boardEditor.setSelected(true);
            boardEditor.loadBoard(null);
        } 
        catch (java.beans.PropertyVetoException e) {}
        
        
    }//GEN-LAST:event_newBoard

    private void handleExitProgram(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleExitProgram

        System.exit(0);
    }//GEN-LAST:event_handleExitProgram

    private void openNewBoard(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openNewBoard

        final javax.swing.JFileChooser fc = new javax.swing.JFileChooser(Main.getProjectFolder());
        fc.setFileFilter(new snoCADfileFilters().getSnoCADxFileFilter());
        int returnVal = fc.showOpenDialog(snoCADapplicationFrame.this);
        
        if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) 
        {
            java.io.File snoCADxFile = fc.getSelectedFile();
            
            if (snoCADxFile != null)
            {
                snoCADeditor boardEditor = new snoCADeditor(snoCADxFile.getName(), 10, 10, 640, 480, 0);
                add(boardEditor);
                try 
                {
                    boardEditor.setSelected(true);
                    boardEditor.loadBoard(snoCADxFile);
                } 
                catch (java.beans.PropertyVetoException e) {}
            }
        } 
        else 
        {
            // File was not opened
        }
    }//GEN-LAST:event_openNewBoard
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new snoCADapplicationFrame().setVisible(true);
             
            }
        });
    }


    private String[] m_args;
    
    public void setArgs(String[] args)
    { 
        m_args = args;
        if (m_args.length > 0)
        {
          for (int i = 0; i < m_args.length; i++)
          {
            String arg = m_args[i];
            
            if (arg.endsWith(".snx"))
            {
                java.io.File snoCADxFile = new java.io.File(m_args[i]);
            
                if (snoCADxFile != null)
                {
                    snoCADeditor boardEditor = new snoCADeditor("Untitled snowboard", 10, 10, 640, 480, 0);
                
                    add(boardEditor);
                
                    try 
                    {
                        boardEditor.setSelected(true);
                        boardEditor.loadBoard(snoCADxFile);
                    } 
                    catch (java.beans.PropertyVetoException e) 
                    {
                    newBoard(null);
                    }
                }
            }
              
          }
        }
        else
        {
           if (Main.getDefaultProduct() == 0) newBoard(null);
           if (Main.getDefaultProduct() == 1) newSki(null);
           
        }
    }
   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AboutSnoCAD;
    private javax.swing.JMenu HelpMenu;
    private javax.swing.JMenuItem jExitProgramMenuItem;
    private javax.swing.JMenu jFileMenu;
    private javax.swing.JMenuItem jImportBoardItem;
    private javax.swing.JMenuBar jMainMenu;
    private javax.swing.JMenuItem jNewBoardMenuItem;
    private javax.swing.JMenuItem jNewSkiMenuItem;
    private javax.swing.JMenuItem jOpenBoardMenuItem;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JMenu optionsMenu;
    private javax.swing.JMenuItem preferences;
    // End of variables declaration//GEN-END:variables
    
    private snoCADpreferences m_preferences ;

    class FileDropHandler extends javax.swing.TransferHandler {

    public boolean canImport(TransferSupport supp) {
        /* for the demo, we'll only support drops (not clipboard paste) */
        if (!supp.isDrop()) {
            return false;
        }

        /* return true if and only if the drop contains a list of files */
        return supp.isDataFlavorSupported(java.awt.datatransfer.DataFlavor.javaFileListFlavor);
    }

    public boolean importData(TransferSupport support) {
        if (!canImport(support)) {
            return false;
        }

        /* fetch the Transferable */
        java.awt.datatransfer.Transferable t = support.getTransferable();

        try {
            /* fetch the data from the Transferable */
            Object data = t.getTransferData(java.awt.datatransfer.DataFlavor.javaFileListFlavor);

            /* data of type javaFileListFlavor is a list of files */
            java.util.List fileList = (java.util.List)data;
            int fileCount = fileList.size();
            /* loop through the files in the file list */
            for (int i = 0; i < fileCount; i++)
            {
                
                java.io.File currentFile = (java.io.File)fileList.get(i);
                String fileName = currentFile.getAbsolutePath();
                if (!fileName.toUpperCase().endsWith(".SNX"))
                {
                    return false;
                }
                
                snoCADeditor boardEditor = new snoCADeditor(currentFile.getName(), 10, 10, 640, 480, 0);
                add(boardEditor);
                try 
                {
                    boardEditor.setSelected(true);
                    boardEditor.loadBoard(currentFile);
                } 
                catch (java.beans.PropertyVetoException e) {}
                
                /* This is where you place your code for opening the
                 * document represented by the "file" variable.
                 * For example:
                 * - create a new internal frame with a text area to
                 *   represent the document
                 * - use a BufferedReader to read lines of the document
                 *   and append to the text area
                 * - add the internal frame to the desktop pane,
                 *   set its bounds and make it visible
                 */
            }
        } catch (java.awt.datatransfer.UnsupportedFlavorException e) {
            return false;
        } catch (java.io.IOException e) {
            return false;
        }

        return true;
    }
}
}
